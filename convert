#!/usr/bin/env python

import sys
import subprocess
import re
import os

executables = ["ffprobe"]



def main(args):
  if len(args) != 2:
    print "usage:"
    exit (1)
  
  for executable in executables:
    try:
      ffprobe = subprocess.Popen([executable], stdout = subprocess.PIPE,
        stderr = subprocess.PIPE)
    except OSError:
      print "Can't find " + executable + " execuatble"
      exit(1)
  
  match = re.match('(.*)\.(mp4|mkv|avi)', os.path.basename(args[1]))
  if not match:
    print "unrecognised extension"
    exit (1)
  pathAbs = args[1]
  if not os.path.isabs(pathAbs):
    pathAbs = os.path.join(os.getcwd(), pathAbs)
  outputName = os.path.join(os.getcwd(), match.group(1)) + ".mp4"
  if os.path.normpath(pathAbs) == (outputName):
    outputName = os.path.join(os.getcwd(), match.group(1)) + "_converted.mp4"
  
  ffprobe = subprocess.Popen(
    "ffprobe -show_streams -print_format compact -select_streams v".split(' ') +
      [args[1]],
    stdout = subprocess.PIPE, stderr = subprocess.PIPE)
  stream =  processCompactToAssoc(ffprobe)
  if stream is None:
    print "Error reading file"
    exit (1)
  
  if stream['r_frame_rate'] != stream['avg_frame_rate']:
    print "frame rate error"
    exit (1)
  for k, v in stream.iteritems():
    print k + ': ' + v


def processCompactToAssoc(ps):
  lastLine = None
  for line in ps.stdout:
    lastLine = line
  if lastLine is None:
    return None
  else:
    return dict(tuple(pair.split('=')) for pair in lastLine.split('|')[1:])


if __name__ == "__main__":
  main(sys.argv)
